<div class="page-nav">
   
  <h1>Mi tienda</h1>
<a href="/carts/{{user.cart}}"><button id="checkout" class="button-checkout ">Carrito</button></a>
</div>
{{#unless user}}
<div class="text-center">

    <h1 class="page-nav-login">Logeate</h1>

    <form id="loginForm" >     
      

        <label>Email</label>
        <input name="email">

        <label>Contraseña</label>
        <input type="password" name="password">

        <input class="pages btn btn-sm btn-info"  type="submit">
    </form>
    <p>Olvidaste tu contraseña ? puedes <a href="/restoreRequest">Restaurala aqui</a></p>
    <p>Tambien Puedes Ingresar Por Github</p>
    <a href="/api/sessions/github"><button class="pages btn btn-sm btn-info" >github</button></a>
</div>
{{/unless}}
<div id="page-content" class="page-content">
 
  <div class="container ">
    <div id="verProductsHome">
   {{#if user}}
    <div>
            <h1>Hola, {{user.name}}</h1>
            <p class="email" email={{user.email}}>Correo: {{user.email}}</p>
            <p class="userID" id={{user.id}}>ID: {{user.id}} </p>
            <p>Role: {{user.role}}</p>
            <p id={{user.cart}} class="idCarrito">Carrito: {{user.cart}}</p>
            <a href="/api/sessions/logout"><button class="pages btn btn-sm btn-info">Salir</button></a>
            
    </div>
   {{/if}}
  </div>

    <!-- Table structure here -->
    <table class= "table table-dark mostrarProductosCart" id="our-table">
      <thead>
        <tr>
          <th>Ref</th>
          <th>Nombre</th>
          <th>Category</th>
          <th>Stock</th>
          <th>Imagen</th>
          <th>Price</th>
        </tr>
      </thead>
      <tbody class= " mostrarProductosCart"  id="table-body">
      </tbody>
    </table>
  

                
         
 
  <div class="container ">
    <div id="pagination-wrapper"></div>
  </div>
</div>



<script>
    const getProduct = (page, orderBy, productId) => {
    fetch(`/api/products?page=${page}&orderBy=${orderBy}`)
      .then(response => response.json())
      .then(data => {
        const tableBody = document.getElementById('table-body');
        tableBody.innerHTML = '';
  
        if (Array.isArray(data.payload.docs)) {
          const productList = data.payload.docs;
  
          productList.forEach(product => {
            const row = `
              <tr class="comprarProducto">
                <td>${product._id}</td>
                <td>${product.title}</td>
                <td>${product.category}</td>
                <td>${product.stock}</td>
                <td><img class="cartIMG" src=${product.thumbnail} alt="img"></td>
                <td>${product.price}</td>
                <td>
                <button onclick="getProduct(0, ${orderBy}, '${product._id}')"class="comprarProducto pages btn btn-sm btn-info"data-product-id="${product._id}">Comprar</button>
                 </td>
              </tr>
            `;
            tableBody.innerHTML += row;
          });
        } else {
          console.log('La propiedad "docs" no existe o no es un array');
        }
  
        pageButtons(data.payload, orderBy);
      })
      .catch(error => {
        console.log('Error al obtener los productos:', error);
      });
      const idCartUser= document.querySelector('.idCarrito');
      const comprarBotones = document.querySelectorAll('.comprarProducto');
comprarBotones.forEach((boton) => {
  boton.addEventListener('click', async (e) => {
    e.preventDefault();
    const productId = e.target.getAttribute('data-product-id'); // Obtener el ID del producto desde el atributo de datos
    console.log(`Se hizo clic en Comprar para el producto con ID: ${productId}`);

    // Aquí puedes agregar la lógica para comprar el producto con el ID obtenido
    // Por ejemplo, hacer una solicitud para agregar el producto al carrito
    const response = await fetch(`/api/carts/${idCartUser.id}/product/${productId}`, {
      method: 'POST',
      body: '',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    const responseData = await response.json();
    console.log(responseData);

    if (responseData.status === 'success') {
      Swal.fire('Se agregó el producto al carrito');
    } else {
      Swal.fire('No se pudo agregar el producto al carrito');
    }

    // Puedes personalizar la lógica de compra según tus necesidades
  });
});

  }
  
  
  
  // Llama a la función getProduct inicialmente para mostrar los productos
  getProduct(0, 0);
  
  function pageButtons(state, orderBy) { console.log("state",state, orderBy)
    var wrapper = document.getElementById('pagination-wrapper');
    wrapper.innerHTML = '';
  
    for (let page = 1; page <= state.totalPages; page++) {
      wrapper.innerHTML += `<button value=${page} class="page btn btn-sm btn-info" style=${page == state.page ? 'color:black;' : null}>${page}</button>`;
    }
  
    if (state.hasPrevPage) {
      wrapper.innerHTML = `<button value=${state.prevPage} class="page btn btn-sm btn-info">&#171; First</button>` + wrapper.innerHTML;
    }
  
    if (state.hasNextPage) {
      wrapper.innerHTML += `<button value=${state.nextPage} class="page btn btn-sm btn-info">Last &#187;</button>`;
    }
  
    wrapper.innerHTML += `<button class="pages btn btn-sm btn-info" onclick="getProduct(0, 0)">Limpiar</button>`;
    wrapper.innerHTML += `<button class="pages btn btn-sm btn-info" onclick="getProduct(0, -1)">Mayor precio</button>`;
    wrapper.innerHTML += `<button class="pages btn btn-sm btn-info" onclick="getProduct(0, 1)">Menor precio</button>`;
  
    $('.page').on('click', function() { 
      const page = Number($(this).val());
      getProduct(page, orderBy);
    });
  }

    function buildTable(state) {
    console.log("data", state);
    console.log("payload", state.querySet);
    var table = $('#table-body');
    table.empty(); // Vaciar el contenido actual de la tabla
    if (state.querySet.length > 0) {
      var myList = state.querySet;
      for (let i = 0; i < myList.length; i++) {
        var row = `
          <tr>
            <td>${myList[i]._id}</td>
            <td>${myList[i].title}</td>
            <td>${myList[i].category}</td>
            <td>${myList[i].stock}</td>
            <td><img class="cartIMG" src=${myList[i].thumbnail} alt="img"></td>
            <td>${myList[i].price}</td>
          </tr>`;
        table.append(row);
      }
    } else {
      var noProductsRow = `<tr><td colspan="6">No hay productos disponibles</td></tr>`;
      table.append(noProductsRow);
    }
  
    pageButtons(state);
    }
</script>



<script src="/js/login.js"></script>


